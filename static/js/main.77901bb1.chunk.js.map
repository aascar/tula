{"version":3,"sources":["components/Modal.js","components/Auth.js","utils/index.js","utils/storage.js","services/index.js","services/entity.js","components/Entities/NewEntity.js","services/transaction.js","constants/index.js","components/Entities/Transactions/NewTransaction.js","components/Amount.js","components/Entities/Transactions/index.js","components/Entities/index.js","components/Layout.js","reducers/auth.js","reducers/crud.js","App.js","hooks/useStore.js","reportWebVitals.js","index.js"],"names":["DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","props","children","classes","onClose","other","disableTypography","className","Typography","variant","IconButton","aria-label","onClick","DialogContent","minWidth","MuiDialogContent","DialogActions","MuiDialogActions","Modal","open","title","actions","handleClose","noValidate","autoComplete","Dialog","aria-labelledby","TransitionProps","unmountOnExit","id","Auth","loggedIn","handleSubmit","React","useState","userId","setUserId","Button","type","e","preventDefault","TextField","label","value","fullWidth","autoFocus","onChange","event","target","getRandomId","size","Math","random","toString","slice","LocalStorage","key","localStorage","setItem","JSON","stringify","strData","getItem","parse","Service","_persistKey","isExists","data","find","en","read","queryFn","Function","map","readById","update","entityObj","Object","i","remove","filter","entity","getAll","persist","Storage","set","retrieve","console","info","get","this","EntityService","create","Entity","name","description","opening_balance","balance","useStyles","makeStyles","grid","textAlign","NewEntity","handleAdd","setName","setBalance","setDescription","setOpen","handleModal","Grid","container","item","sm","Number","multiline","rows","startIcon","TransactionService","transaction","Transaction","entityId","cost","paid","payment_mode","remarks","time","Date","now","CRUD","PAYMENT_MODES","CASH","UPI","WIRE","WALLET","CARD","paper","button","NewTransaction","setTime","setCost","setPaid","paymentMode","setPaymentMode","setRemarks","handleOpen","Paper","xs","select","keys","o","MenuItem","fontSize","typography","pxToRem","debit","error","main","credit","success","Amount","amount","neutral","cx","component","abs","width","secondaryHeading","text","secondary","header","expanded","setExpanded","Accordion","isExpanded","AccordionSummary","expandIcon","aria-controls","toLocaleString","AccordionDetails","Transactions","dispatch","d","cb","payload","heading","flexBasis","flexShrink","marginRight","divider","rightAlign","transactions","transactionProps","Divider","Entities","entities","flexGrow","menuButton","Layout","AppBar","Toolbar","aria-haspopup","Container","auth","state","action","Error","crud","returnState","index","findIndex","obj","App","useReducer","entityDispatcher","transactionDispatcher","setData","useEffect","Array","isArray","trans","prepareData","ref","useRef","current","length","useStore","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAuBMA,EAAcC,aAbL,SAACC,GAAD,MAAY,CACzBC,KAAM,CACJC,OAAQ,EACRC,QAASH,EAAMI,QAAQ,IAEzBC,YAAa,CACXC,SAAU,WACVC,MAAOP,EAAMI,QAAQ,GACrBI,IAAKR,EAAMI,QAAQ,GACnBK,MAAOT,EAAMU,QAAQC,KAAK,SAIVZ,EAAmB,SAACa,GAAW,IACzCC,EAAyCD,EAAzCC,SAAUC,EAA+BF,EAA/BE,QAASC,EAAsBH,EAAtBG,QAAYC,EADS,YACCJ,EADD,kCAEhD,OACE,eAAC,IAAD,yBAAgBK,mBAAiB,EAACC,UAAWJ,EAAQb,MAAUe,GAA/D,cACE,cAACG,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BP,IACzBE,EACC,cAACM,EAAA,EAAD,CACEC,aAAW,QACXJ,UAAWJ,EAAQT,YACnBkB,QAASR,EAHX,SAKE,cAAC,IAAD,MAEA,YAKJS,EAAgBzB,aAAW,SAACC,GAAD,MAAY,CAC3CC,KAAM,CACJE,QAASH,EAAMI,QAAQ,GACvBqB,SAAU,QAHQ1B,CAKlB2B,KAEEC,EAAgB5B,aAAW,SAACC,GAAD,MAAY,CAC3CC,KAAM,CACJC,OAAQ,EACRC,QAASH,EAAMI,QAAQ,OAHLL,CAKlB6B,KAEW,SAASC,EAAT,GAAiE,IAAhDhB,EAA+C,EAA/CA,SAAUiB,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,YAC9D,OACE,sBAAMC,YAAU,EAACC,aAAa,MAA9B,SACE,eAACC,EAAA,EAAD,CACEC,kBAAgB,0BAChBP,KAAMA,EACNf,QAAO,OAAEkB,QAAF,IAAEA,IAAgB,kBAAM,MAC/BK,gBAAiB,CAAEC,eAAe,GAJpC,UAMGR,GACC,cAAC,EAAD,CAAaS,GAAG,0BAA0BzB,QAASkB,EAAnD,SACGF,IAGL,cAAC,EAAD,UAAgBlB,IAChB,cAAC,EAAD,UAIGmB,SCrEI,SAASS,EAAT,GAAmD,IAAD,IAAlCC,gBAAkC,SAAhBC,EAAgB,EAAhBA,aAAgB,EACnCC,IAAMC,SAAS,IADoB,mBACxDC,EADwD,KAChDC,EADgD,KAWzDf,EACJ,cAACgB,EAAA,EAAD,CAAQC,KAAK,SAAS1B,QANP,SAAC2B,GAChBA,EAAEC,iBACFR,EAAa,CAAEM,KAAM,QAASH,YAIWrC,MAAM,UAA/C,mBAKF,OACE,cAACoB,EAAD,CAAOE,MAAM,QAAQC,QAASA,EAASF,MAAOY,EAA9C,SACE,cAACU,EAAA,EAAD,CACEZ,GAAG,SACHa,MAAM,UACNC,MAAOR,EACPS,WAAS,EACTC,WAAS,EACTC,SAvBe,SAACC,GACpBX,EAAUW,EAAMC,OAAOL,Y,4HCRdM,EAAc,eAACC,EAAD,uDAAQ,EAAR,OACzBC,KAAKC,SAASC,SAAS,IAAIC,OAAOJ,I,QCDfK,E,iGACRC,EAAKb,GACdc,aAAaC,QAAQF,EAAKG,KAAKC,UAAUjB,M,0BAGhCa,GACT,IAAMK,EAAUJ,aAAaK,QAAQN,GACrC,OAAOG,KAAKI,MAAMF,O,KCLDG,EAInB,WAAY7B,GAAS,IAAD,gCAHpB8B,YAAc,YAGM,KAMpBC,SAAW,SAACrC,GAAD,QAAU,EAAKsC,KAAKC,MAAK,SAACC,GAAD,OAAQA,EAAGxC,KAAOA,MANlC,KAQpByC,KAAO,SAACC,GACFA,aAAmBC,UACrB,EAAKL,KAAKM,KAAI,SAACJ,GAAD,OAAQE,EAAQF,OAVd,KAcpBK,SAAW,SAAC7C,GACV,GAAIA,EACF,OAAO,EAAKsC,KAAKC,MAAK,SAACC,GAAD,OAAQA,EAAGxC,KAAOA,MAhBxB,KAoBpB8C,OAAS,SAAC9C,EAAI+C,GACZ,GAAIA,aAAqBC,OACvB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAKX,KAAMW,IAAK,CAClC,IAAMT,EAAK,EAAKF,KAAKW,GACrB,GAAIT,EAAGxC,KAAOA,EAAI,CAChB,EAAKsC,KAAKW,GAAV,2BAAoBT,GAAOO,GAC3B,EAAKT,KAAL,YAAgB,EAAKA,MACrB,SA3BY,KAiCpBY,OAAS,SAAClD,GACJA,IACF,EAAKsC,KAAO,EAAKA,KAAKa,QAAO,SAACC,GAAD,OAAYA,EAAOpD,KAAOA,OAnCvC,KAuCpBqD,OAAS,WACP,OAAO,EAAKf,MAxCM,KA2CpBgB,QAAU,WACRC,EAAQC,IAAI,EAAKpB,YAAa,EAAKE,OA5CjB,KA+CpBmB,SAAW,WAAO,IAAD,EAEf,OADAC,QAAQC,KAAK,EAAKvB,aAClB,UAAOmB,EAAQK,IAAI,EAAKxB,oBAAxB,QAAwC,IAhDxCyB,KAAKvD,OAASA,GCJGwD,E,kDAGnB,WAAYxD,GAAS,IAAD,8BAClB,cAAMA,IAHR8B,YAAc,gBAEM,EAMpB2B,OAAS,SAACX,GACJA,aAAkBY,GAChB,EAAK3B,SAASe,EAAOpD,MACvB,EAAKsC,KAAL,sBAAgB,EAAKA,MAArB,CAA2Bc,MAP/B,EAAKhB,YAAc,EAAK9B,OAAS,EAAK8B,YACtC,EAAKE,KAAO,EAAKmB,WAHC,E,UAHqBtB,GAkB9B6B,EAMX,WAAYC,EAAMC,EAAaC,GAAkB,oBAC/CN,KAAK7D,GAAKoB,IACVyC,KAAKI,KAAOA,EACZJ,KAAKK,YAAcA,EACnBL,KAAKM,gBAAkBA,EACvBN,KAAKO,QAAUD,GCvBbE,EAAYC,aAAW,SAAC9G,GAAD,MAAY,CACvC+G,KAAM,CACJC,UAAW,aAIA,SAASC,EAAT,GAAmC,IAAdC,EAAa,EAAbA,UAC5BpG,EAAU+F,IAD+B,EAEvBjE,IAAMC,SAAS,IAFQ,mBAExC4D,EAFwC,KAElCU,EAFkC,OAGTvE,IAAMC,SAAS,GAHN,mBAGxC8D,EAHwC,KAGvBS,EAHuB,OAITxE,IAAMC,SAAS,IAJN,mBAIxC6D,EAJwC,KAI3BW,EAJ2B,OAmBvBzE,IAAMC,UAAS,GAnBQ,mBAmBxCf,EAnBwC,KAmBlCwF,EAnBkC,KAoBzCC,EAAc,WAClBD,GAASxF,IAGX,OACE,gCACE,cAACD,EAAD,CACEC,KAAMA,EACNE,QACE,cAACgB,EAAA,EAAD,CAAQzB,QAjBK,SAACmC,GACpBA,EAAMP,iBACN+D,EAAU,IAAIV,EAAOC,EAAMC,GAAcC,IACzCY,IARAJ,EAAQ,IACRC,EAAW,GACXC,EAAe,KAoBsB5G,MAAM,UAArC,oBAIFsB,MAAM,aACNE,YAAasF,EARf,SAUE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACrH,QAAS,EAAzB,UACE,cAACoH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACvE,EAAA,EAAD,CACEZ,GAAG,OACHa,MAAM,OACNC,MAAOmD,EACPhD,SAAU,SAACP,GAAD,OAAOiE,EAAQjE,EAAES,OAAOL,QAClCC,WAAS,MAGb,cAACiE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACvE,EAAA,EAAD,CACEZ,GAAG,UACHa,MAAM,kBACNC,MAAOqD,EACPlD,SAAU,SAACP,GAAD,OAAOkE,EAAWQ,OAAO1E,EAAES,OAAOL,SAC5CL,KAAK,SACLM,WAAS,MAGb,cAACiE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACvE,EAAA,EAAD,CACEZ,GAAG,cACHa,MAAM,cACNC,MAAOoD,EACPjD,SAAU,SAACP,GAAD,OAAOmE,EAAenE,EAAES,OAAOL,QACzCL,KAAK,OACL4E,WAAS,EACTC,KAAM,EACNvE,WAAS,WAKjB,cAACiE,EAAA,EAAD,CAAMC,WAAS,EAACrH,QAAS,EAAzB,SACE,cAACoH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIzG,UAAWJ,EAAQiG,KAAtC,SACE,cAAC/D,EAAA,EAAD,CACE5B,QAAQ,YACRG,QAASgG,EACT9G,MAAM,UACNsH,UAAW,cAAC,IAAD,IAJb,2B,ICpFWC,E,kDAGnB,WAAYlF,GAAS,IAAD,8BAClB,cAAMA,IAHR8B,YAAc,oBAEM,EAMpB2B,OAAS,SAAC0B,GACJA,aAAuBC,GACrB,EAAKrD,SAASoD,EAAYzF,MAC5B,EAAKsC,KAAL,sBAAgB,EAAKA,MAArB,CAA2BmD,MAP/B,EAAKrD,YAAc,EAAK9B,OAAS,EAAK8B,YACtC,EAAKE,KAAO,EAAKmB,WAHC,E,UAH0BtB,GAkBnCuD,EAQX,WAAYC,EAAUC,EAAMC,EAAMC,EAAcC,GAA6B,IAApBC,EAAmB,uDAAZC,KAAKC,MAAO,oBAC1ErC,KAAK7D,GAAKoB,IACVyC,KAAKmC,MAAQ,IAAIC,KAAKD,GACtBnC,KAAK8B,SAAWA,EAChB9B,KAAK+B,KAAOA,EACZ/B,KAAKgC,KAAOA,EACZhC,KAAKiC,aAAeA,EACpBjC,KAAKkC,QAAL,OAAeA,QAAf,IAAeA,IAAW,I,iBCpCjBI,EACH,SADGA,GAGH,SAHGA,GAIH,SAJGA,GAKE,cAGFC,GAAgB,CAC3BC,KAAM,OACNC,IAAK,MACLC,KAAM,OACNC,OAAQ,SACRC,KAAM,QCFFpC,GAAYC,aAAW,SAAC9G,GAAD,MAAY,CACvCkJ,MAAO,CACLhJ,OAAO,GAAD,OAAKF,EAAMI,QAAQ,GAAnB,QACND,QAAQ,GAAD,OAAKH,EAAMI,QAAQ,GAAnB,OAET2G,KAAM,CACJC,UAAW,SAEbmC,OAAQ,CACNjJ,OAAO,GAAD,OAAKF,EAAMI,QAAQ,GAAnB,aAIK,SAASgJ,GAAT,GAAwC,IAAdlC,EAAa,EAAbA,UACjCpG,EAAU+F,KADoC,EAE5BjE,IAAMC,SAAS4F,KAAKC,OAFQ,mBAE7CF,EAF6C,KAEvCa,EAFuC,OAG5BzG,IAAMC,SAAS,GAHa,mBAG7CuF,EAH6C,KAGvCkB,EAHuC,OAI5B1G,IAAMC,SAAS,GAJa,mBAI7CwF,EAJ6C,KAIvCkB,EAJuC,OAKd3G,IAAMC,SAAS+F,GAAcC,MALf,mBAK7CW,EAL6C,KAKhCC,EALgC,OAMtB7G,IAAMC,SAAS,IANO,mBAM7C0F,EAN6C,KAMpCmB,EANoC,OA0B5B9G,IAAMC,UAAS,GA1Ba,mBA0B7Cf,EA1B6C,KA0BvCwF,EA1BuC,KA2B9CqC,EAAa,WACjBrC,GAASxF,IAGX,OACE,uBAAMI,YAAU,EAACC,aAAa,MAA9B,UACGL,GACC,cAAC8H,EAAA,EAAD,CAAO1I,UAAWJ,EAAQoI,MAA1B,SACE,eAAC1B,EAAA,EAAD,CAAMC,WAAS,EAACrH,QAAS,EAAzB,UACE,cAACoH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGkC,GAAI,GAAtB,SACE,cAACzG,EAAA,EAAD,CACEZ,GAAG,OACHa,MAAM,OACNC,MAAO8E,EACP3E,SAAU,SAACP,GAAD,OAAOoG,EAAQ1B,OAAO1E,EAAES,OAAOL,SACzCL,KAAK,SACLM,WAAS,EACTM,KAAK,YAGT,cAAC2D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGkC,GAAI,GAAtB,SACE,cAACzG,EAAA,EAAD,CACEZ,GAAG,OACHa,MAAM,OACNC,MAAO+E,EACP5E,SAAU,SAACP,GAAD,OAAOqG,EAAQ3B,OAAO1E,EAAES,OAAOL,SACzCL,KAAK,SACLM,WAAS,EACTM,KAAK,YAGT,cAAC2D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGkC,GAAI,GAAtB,SACE,cAACzG,EAAA,EAAD,CACEZ,GAAG,OACHa,MAAM,OACNC,MAAOkF,EACP/E,SAAU,SAACP,GAAD,OAAOmG,EAAQnG,EAAES,OAAOL,QAClCL,KAAK,iBACLM,WAAS,EACTM,KAAK,YAGT,cAAC2D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGkC,GAAI,GAAtB,SACE,cAACzG,EAAA,EAAD,CACEZ,GAAG,eACHsH,QAAM,EACNzG,MAAM,eACNC,MAAOkG,EACP/F,SAAU,SAACP,GAAD,OAAOuG,EAAevG,EAAES,OAAOL,QACzCC,WAAS,EANX,SAQGiC,OAAOuE,KAAKnB,IAAexD,KAAI,SAAC4E,GAAD,OAC9B,cAACC,EAAA,EAAD,CAAkB3G,MAAO0G,EAAzB,SACGA,GADYA,UAMrB,cAACxC,EAAA,EAAD,CAAME,MAAI,EAACmC,GAAI,GAAf,SACE,cAACzG,EAAA,EAAD,CACEZ,GAAG,UACHa,MAAM,UACNC,MAAOiF,EACP9E,SAAU,SAACP,GAAD,OAAOwG,EAAWxG,EAAES,OAAOL,QACrCL,KAAK,OACL4E,WAAS,EACTC,KAAM,EACNvE,WAAS,EACTM,KAAK,YAGT,cAAC2D,EAAA,EAAD,CAAME,MAAI,EAACmC,GAAI,GAAI3I,UAAWJ,EAAQiG,KAAtC,SACE,cAAC/D,EAAA,EAAD,CACE5B,QAAQ,YACRG,QArFO,SAACmC,GACpBA,EAAMP,iBACN+D,GACE,SAACiB,GAAD,OACE,IAAID,EAAYC,EAAUC,EAAMC,EAAMmB,EAAajB,EAASC,MAEhEmB,IAbAN,EAAQZ,KAAKC,OACbY,EAAQ,GACRC,EAAQ,GACRE,EAAeb,GAAcC,MAC7Ba,EAAW,KAyFCjJ,MAAM,UACNoD,KAAK,QAJP,4BAYN/B,GACA,cAACkB,EAAA,EAAD,CACEzB,QAASoI,EACTlJ,MAAM,UACNsH,UAAW,cAAC,IAAD,IACXlE,KAAK,QACL3C,UAAWJ,EAAQqI,OALrB,4B,iCCnIFtC,GAAYC,aAAW,SAAC9G,GAAD,MAAY,CACvCC,KAAM,CACJiK,SAAUlK,EAAMmK,WAAWC,QAAQ,KAErCC,MAAO,CACL5J,MAAOT,EAAMU,QAAQ4J,MAAMC,MAE7BC,OAAQ,CACN/J,MAAOT,EAAMU,QAAQ+J,QAAQF,UAIlB,SAASG,GAAT,GAA8C,IAAD,EAA3BC,EAA2B,EAA3BA,OAA2B,IAAnBC,eAAmB,SACpD9J,EAAU+F,KAChB,OACE,eAAC1F,EAAA,EAAD,CACED,UAAW2J,KAAG/J,EAAQb,MAAT,oBACVa,EAAQuJ,OAASO,GAAWD,EAAS,GAD3B,eAEV7J,EAAQ0J,QAAUI,GAAWD,EAAS,GAF5B,IAIbG,UAAU,OALZ,oBAOKhH,KAAKiH,IAAIJ,MCflB,IAAM9D,GAAYC,aAAW,SAAC9G,GAAD,MAAY,CACvCC,KAAM,CACJ+K,MAAO,QAETC,iBAAkB,CAChBf,SAAUlK,EAAMmK,WAAWC,QAAQ,IACnC3J,MAAOT,EAAMU,QAAQwK,KAAKC,WAE5BC,OAAQ,CACN,oCAAqC,CACnCpE,UAAW,cAKjB,SAASkB,GAAT,GAAuE,IAAhD1F,EAA+C,EAA/CA,GAAIgG,EAA2C,EAA3CA,KAAMJ,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,QACnDzH,EAAU+F,KADoD,EAEpCjE,IAAMC,UAAS,GAFqB,mBAE7DwI,EAF6D,KAEnDC,EAFmD,KAQpE,OACE,eAACC,EAAA,EAAD,CACEF,SAAUA,EACV5H,SAPiB,SAACC,EAAO8H,GAC3BF,EAAYE,IAOVlJ,gBAAiB,CAAEC,eAAe,GAHpC,UAKE,cAACkJ,EAAA,EAAD,CACEC,WAAY,cAAC,IAAD,IACZC,gBAAc,UACdnJ,GAAIA,EAHN,SAKE,eAACgF,EAAA,EAAD,CAAMC,WAAS,EAACrH,QAAS,EAAGc,UAAWJ,EAAQsK,OAA/C,UACE,cAAC5D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGkC,GAAI,EAAtB,SACE,cAAC1I,EAAA,EAAD,UAAa,IAAIsH,KAAKD,GAAMoD,qBAE9B,cAACpE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGkC,GAAI,EAAtB,SACE,cAACa,GAAD,CAAQC,OAAQvC,EAAMwC,SAAO,MAE/B,eAACpD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGkC,GAAI,EAAtB,UACE,cAACa,GAAD,CAAQC,QAAStC,IACjB,eAAClH,EAAA,EAAD,CAAY2J,UAAU,OAAO1J,QAAQ,UAArC,cACIkH,EADJ,UAIF,cAACd,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGkC,GAAI,EAAtB,SACE,cAACa,GAAD,CAAQC,OAAQvC,EAAOC,WAI7B,cAACwD,EAAA,EAAD,UACE,cAAC1K,EAAA,EAAD,CAAYD,UAAWJ,EAAQmK,iBAA/B,SAAkD1C,SAM3C,SAASuD,GAAT,GAAqD,IAA7B3D,EAA4B,EAA5BA,SAAUrD,EAAkB,EAAlBA,KAAMiH,EAAY,EAAZA,SACrClF,KAOhB,OACE,eAACW,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACG7C,EAAKM,KAAI,SAAC4G,GAAD,OACR,cAAC,GAAD,eAA4BA,GAAVA,EAAExJ,SAGxB,cAACgF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACyB,GAAD,CAAgBlC,UAbJ,SAAC+E,GACjB,IAAMhE,EAAcgE,EAAG9D,GACvB4D,EAAS,CAAE9I,KAAM0F,EAAauD,QAASjE,YC/D3C,IAAMpB,GAAYC,aAAW,SAAC9G,GAAD,MAAY,CACvCC,KAAM,CACJ+K,MAAO,OACP9K,OAAO,GAAD,OAAKF,EAAMI,QAAQ,GAAnB,SAER+L,QAAS,CACPjC,SAAUlK,EAAMmK,WAAWC,QAAQ,IACnCgC,UAAW,SACXC,WAAY,GAEdpB,iBAAkB,CAChBf,SAAUlK,EAAMmK,WAAWC,QAAQ,IACnCgC,UAAW,SACXC,WAAY,EACZrF,UAAW,QACXsF,YAAatM,EAAMI,QAAQ,IAE7B8I,MAAO,CACL/I,QAASH,EAAMI,QAAQ,IAEzBmM,QAAS,CACPrM,OAAO,GAAD,OAAKF,EAAMI,QAAQ,GAAnB,SAERoM,WAAY,CACVxF,UAAW,aAIf,SAASR,GAAT,GAQI,IAPFhE,EAOC,EAPDA,GACAiE,EAMC,EANDA,KACAC,EAKC,EALDA,YACAE,EAIC,EAJDA,QACAD,EAGC,EAHDA,gBACA8F,EAEC,EAFDA,aACAC,EACC,EADDA,iBAEM5L,EAAU+F,KADf,EAE+BjE,IAAMC,UAAS,GAF9C,mBAEMwI,EAFN,KAEgBC,EAFhB,KAQD,OACE,eAACC,EAAA,EAAD,CACEF,SAAUA,EACV5H,SAPiB,SAACC,EAAO8H,GAC3BF,EAAYE,IAOVlJ,gBAAiB,CAAEC,eAAe,GAHpC,UAKE,eAACkJ,EAAA,EAAD,CACEC,WAAY,cAAC,IAAD,IACZC,gBAAc,UACdnJ,GAAIA,EAHN,UAKE,cAACrB,EAAA,EAAD,CAAYD,UAAWJ,EAAQqL,QAA/B,SAAyC1F,IACzC,qBAAKvF,UAAWJ,EAAQmK,iBAAxB,SACE,cAACP,GAAD,CAAQC,OAAQ/D,SAGpB,cAAC+F,EAAA,EAAD,IACA,cAACd,EAAA,EAAD,UACE,eAACrE,EAAA,EAAD,CAAMC,WAAS,EAACrH,QAAS,EAAzB,UACE,eAACoH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,UACE,cAACxG,EAAA,EAAD,CAAYC,QAAQ,UAApB,6BACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,SACE,cAACsJ,GAAD,CAAQC,OAAQhE,MAElB,cAACgG,EAAA,EAAD,CAASzL,UAAWJ,EAAQyL,UAC5B,cAACpL,EAAA,EAAD,CAAYC,QAAQ,UAApB,yBACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6BsF,OAE/B,cAACc,EAAA,EAAD,CAAME,MAAI,EAACmC,GAAI,GAAIlC,GAAI,EAAvB,SACE,cAACmE,GAAD,aACE3D,SAAU3F,EACVsC,KAAM2H,GACFC,cASH,SAASE,GAAT,GAAyD,IAAD,EAApC9H,EAAoC,EAApCA,KAAMiH,EAA8B,EAA9BA,SAAUW,EAAoB,EAApBA,iBAC3C5L,EAAU+F,KAMhB,OACE,eAACW,EAAA,EAAD,CAAMC,WAAS,EAACvG,UAAWJ,EAAQb,KAAMG,QAAS,EAAlD,UACE,cAACoH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGzG,UAAWJ,EAAQ0L,WAArC,SACE,eAACrL,EAAA,EAAD,CAAY2J,UAAU,MAAM1J,QAAQ,YAApC,oBACS,cAACsJ,GAAD,CAAQC,OAAQ7F,EAAK8B,eAGhC,cAACY,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACV,EAAD,CAAWC,UAZC,SAACtB,GACjBmG,EAAS,CAAE9I,KAAM0F,EAAauD,QAAStG,SAarC,cAAC4B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,mBACG7C,EAAK+H,gBADR,aACG,EAAezH,KAAI,SAAC4G,GACnB,OACE,cAAC,GAAD,2BAAuBA,GAAvB,IAA0BU,iBAAkBA,IAA/BV,EAAExJ,Y,sDC7GrBqE,GAAYC,aAAW,SAAC9G,GAAD,MAAY,CACvCC,KAAM,CACJ6M,SAAU,GAEZC,WAAY,CACVT,YAAatM,EAAMI,QAAQ,IAE7B2B,MAAO,CACL+K,SAAU,OAIC,SAASE,GAAT,GAAuC,IAArBlK,EAAoB,EAApBA,OAAQjC,EAAY,EAAZA,SACjCC,EAAU+F,KAChB,OACE,sBAAK3F,UAAWJ,EAAQb,KAAxB,UACE,cAACgN,GAAA,EAAD,CAAQ3M,SAAS,SAAjB,SACE,eAAC4M,GAAA,EAAD,WACE,cAAC/L,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAWJ,EAAQiB,MAA5C,kBAGA,8BACGe,EACC,cAAC3B,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAWJ,EAAQiB,MAA5C,SACGe,IAGH,cAACzB,EAAA,EAAD,CACEC,aAAW,0BACXqK,gBAAc,cACdwB,gBAAc,OACd1M,MAAM,UAJR,SAME,cAAC,KAAD,aAMV,cAAC2M,GAAA,EAAD,UAAYtK,GAAUjC,OChDb,SAASwM,GAAKC,EAAOC,GAAS,IACnCtK,EAAiBsK,EAAjBtK,KAAMH,EAAWyK,EAAXzK,OACd,OAAQG,GACN,IAAK,QACH,MAAO,CAAEH,UACX,IAAK,SACH,MAAO,GACT,QACE,MAAM,IAAI0K,OCPD,SAASC,GAAKH,EAAOC,GAAS,IAEvCG,EAAcJ,EAClB,OAFiBC,EAATtK,MAGN,KAAK0F,GACH+E,EAAW,sBAAOJ,GAAP,YAAiBC,EAAOrB,UACnC,MACF,KAAKvD,EACH+E,EAAW,sBAAOJ,GAAP,CAAcC,EAAOrB,UAChC,MACF,KAAKvD,GACH,IAAMgF,EAAQL,EAAMM,WAAU,SAAC5D,GAAD,OAAOA,EAAExH,KAAO+K,EAAO/K,MACrD,GAAImL,EAAQ,EAAG,CACb,IAAME,EAAG,2BAAQP,EAAMK,IAAWJ,EAAOrB,SACzCwB,EAAW,sBACNJ,EAAMrJ,MAAM,EAAG0J,IADT,CAETE,GAFS,YAGNP,EAAMrJ,MAAM0J,EAAQ,KAG3B,MACF,KAAKhF,GACH+E,EAAcJ,EAAM3H,QAAO,SAACqE,GAAD,OAAOuD,EAAOrI,QAAQ8E,MACjD,MACF,QACE,MAAM,IAAIwD,MAEd,OAAOE,ECgBMI,OAlCf,WAAgB,IAAD,EACsBlL,IAAMmL,WAAWV,GAAM,IAD7C,mBACJvK,EADI,KACJA,OAAUH,EADN,OAEwBC,IAAMmL,WAAWN,GAAM,IAF/C,mBAENZ,EAFM,KAEImB,EAFJ,OAGiCpL,IAAMmL,WAAWN,GAAM,IAHxD,mBAGNhB,EAHM,KAGQwB,EAHR,OAIWrL,IAAMC,SAAS,IAJ1B,mBAINiC,EAJM,KAIAoJ,EAJA,KAoBb,OAdAC,qBAAU,WACJrL,GACFoL,EdfqB,SAACrB,EAAUJ,GACpC,IAAM3H,EAAO,CACX8B,QAAS,EACTiG,SAAU,IAmBZ,OAjBIuB,MAAMC,QAAQxB,IAAauB,MAAMC,QAAQ5B,KAC3C3H,EAAK+H,SAAW,YAAIA,GAAUzH,KAAI,SAACQ,GACjC,IAAMZ,EAAE,eAAQY,GACV0I,EAAQ7B,EAAa9G,QAAO,SAACqE,GACjC,OAAIA,EAAE7B,WAAanD,EAAGxC,KACpBwC,EAAG4B,SAAWoD,EAAE5B,KAAO4B,EAAE3B,MAClB,MAKX,OADAvD,EAAK8B,UAAY5B,EAAG4B,QACb,2BACF5B,GADL,IAEEyH,aAAc6B,QAIbxJ,EcPKyJ,CAAY1B,EAAUJ,MAE/B,CAAC3J,EAAQ+J,EAAUJ,ICfT,SACb3J,EACA+J,EACAJ,EACAuB,EACAC,GAEA,IAAMO,EAAM5L,IAAM6L,OAAO,IACzB7L,IAAMuL,WAAU,WAAO,IAAD,EACYK,EAAIE,QAA5B9I,EADY,EACZA,OAAQqC,EADI,EACJA,aACZnF,GAAW8C,GAAWqC,IACxBuG,EAAIE,QAAQ9I,OAAS,IAAIU,EAAcxD,GACvC0L,EAAIE,QAAQzG,YAAc,IAAID,EAAmBlF,GACjDkL,EAAiB,CACf/K,KAAM0F,GACNuD,QAASsC,EAAIE,QAAQ9I,OAAOd,OAE9BmJ,EAAsB,CACpBhL,KAAM0F,GACNuD,QAASsC,EAAIE,QAAQzG,YAAYnD,QAGjC0J,EAAIE,QAAQ9I,QAAU4I,EAAIE,QAAQzG,cAChC4E,EAAS8B,SACX/I,EAAOd,KAAO+H,EACdjH,EAAOE,WAEL2G,EAAakC,SACf1G,EAAYnD,KAAO2H,EACnBxE,EAAYnC,cAGf,CAAChD,EAAQ+J,EAAUJ,EAAcuB,EAAkBC,IDftDW,CACE9L,EACA+J,EACAJ,EACAuB,EACAC,GAIA,sBAAK/M,UAAU,MAAf,UACE,cAACuB,EAAD,CAAMC,WAAYI,EAAQH,aAAcA,IACxC,cAACqK,GAAD,CAAQlK,OAAQA,EAAhB,SACE,cAAC8J,GAAD,CACE9H,KAAMA,EACNiH,SAAUiC,EACVtB,iBAAkB,CAAEX,SAAUkC,WEzBzBY,GAZS,SAAAC,GAClBA,GAAeA,aAAuB3J,UACxC,8BAAqB4J,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.77901bb1.chunk.js","sourcesContent":["import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    minWidth: 320,\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Modal({ children, open, title, actions, handleClose }) {\n  return (\n    <form noValidate autoComplete=\"off\">\n      <Dialog\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n        onClose={handleClose ?? (() => null)}\n        TransitionProps={{ unmountOnExit: true }}\n      >\n        {title && (\n          <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n            {title}\n          </DialogTitle>\n        )}\n        <DialogContent>{children}</DialogContent>\n        <DialogActions>\n          {/* <Button onClick={handleSubmit} color=\"primary\">\n            Login\n          </Button> */}\n          {actions}\n        </DialogActions>\n      </Dialog>\n    </form>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Modal from \"./Modal\";\n\nexport default function Auth({ loggedIn = false, handleSubmit }) {\n  const [userId, setUserId] = React.useState(\"\");\n  const handleChange = (event) => {\n    setUserId(event.target.value);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    handleSubmit({ type: \"LOGIN\", userId });\n  };\n\n  const actions = (\n    <Button type=\"submit\" onClick={onSubmit} color=\"primary\">\n      Login\n    </Button>\n  );\n\n  return (\n    <Modal title=\"Login\" actions={actions} open={!loggedIn}>\n      <TextField\n        id=\"userId\"\n        label=\"User Id\"\n        value={userId}\n        fullWidth\n        autoFocus\n        onChange={handleChange}\n      />\n    </Modal>\n  );\n}\n","export const getRandomId = (size = 7) =>\n  Math.random().toString(36).slice(-size);\n\nexport const prepareData = (entities, transactions) => {\n  const data = {\n    balance: 0,\n    entities: [],\n  };\n  if (Array.isArray(entities) && Array.isArray(transactions)) {\n    data.entities = [...entities].map((entity) => {\n      const en = { ...entity };\n      const trans = transactions.filter((o) => {\n        if (o.entityId === en.id) {\n          en.balance += o.cost - o.paid;\n          return true;\n        }\n        return false;\n      });\n      data.balance += +en.balance;\n      return {\n        ...en,\n        transactions: trans,\n      };\n    });\n  }\n  return data;\n};\n","export default class LocalStorage {\n  static set(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  static get(key) {\n    const strData = localStorage.getItem(key);\n    return JSON.parse(strData);\n  }\n}\n","import Storage from \"../utils/storage\";\n\nexport default class Service {\n  _persistKey = \"_a_t_data\";\n  data;\n  userId;\n  constructor(userId) {\n    this.userId = userId;\n    // this._persistKey = this.userId + this._persistKey;\n    // this.data = data ?? this.retrieve();\n  }\n\n  isExists = (id) => !!this.data.find((en) => en.id === id);\n\n  read = (queryFn) => {\n    if (queryFn instanceof Function) {\n      this.data.map((en) => queryFn(en));\n    }\n  };\n\n  readById = (id) => {\n    if (id) {\n      return this.data.find((en) => en.id === id);\n    }\n  };\n\n  update = (id, entityObj) => {\n    if (entityObj instanceof Object) {\n      for (let i = 0; i < this.data; i++) {\n        const en = this.data[i];\n        if (en.id === id) {\n          this.data[i] = { ...en, ...entityObj };\n          this.data = [...this.data];\n          break;\n        }\n      }\n    }\n  };\n\n  remove = (id) => {\n    if (id) {\n      this.data = this.data.filter((entity) => entity.id !== id);\n    }\n  };\n\n  getAll = () => {\n    return this.data;\n  };\n\n  persist = () => {\n    Storage.set(this._persistKey, this.data);\n  };\n\n  retrieve = () => {\n    console.info(this._persistKey);\n    return Storage.get(this._persistKey) ?? [];\n  };\n}\n","import { getRandomId } from \"../utils\";\nimport Service from \"./index\";\n\nexport default class EntityService extends Service {\n  _persistKey = \"_a_t_entities\";\n\n  constructor(userId) {\n    super(userId);\n    this._persistKey = this.userId + this._persistKey;\n    this.data = this.retrieve();\n  }\n\n  create = (entity) => {\n    if (entity instanceof Entity) {\n      if (this.isExists(entity.id)) {\n        this.data = [...this.data, entity];\n      }\n    }\n  };\n}\n\nexport class Entity {\n  id;\n  name;\n  description;\n  balance;\n  opening_balance;\n  constructor(name, description, opening_balance) {\n    this.id = getRandomId();\n    this.name = name;\n    this.description = description;\n    this.opening_balance = opening_balance;\n    this.balance = opening_balance;\n  }\n}\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Entity } from \"../../services/entity\";\nimport Modal from \"../Modal\";\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    textAlign: \"right\",\n  },\n}));\n\nexport default function NewEntity({ handleAdd }) {\n  const classes = useStyles();\n  const [name, setName] = React.useState(\"\");\n  const [opening_balance, setBalance] = React.useState(0);\n  const [description, setDescription] = React.useState(\"\");\n\n  const reset = () => {\n    setName(\"\");\n    setBalance(0);\n    setDescription(\"\");\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    handleAdd(new Entity(name, description, -opening_balance));\n    handleModal();\n    reset();\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const handleModal = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <div>\n      <Modal\n        open={open}\n        actions={\n          <Button onClick={handleSubmit} color=\"primary\">\n            Submit\n          </Button>\n        }\n        title=\"New Entity\"\n        handleClose={handleModal}\n      >\n        <Grid container spacing={1}>\n          <Grid item sm={6}>\n            <TextField\n              id=\"name\"\n              label=\"Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              fullWidth\n            />\n          </Grid>\n          <Grid item sm={6}>\n            <TextField\n              id=\"balance\"\n              label=\"Opening Balance\"\n              value={opening_balance}\n              onChange={(e) => setBalance(Number(e.target.value))}\n              type=\"number\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item sm={12}>\n            <TextField\n              id=\"description\"\n              label=\"Description\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              type=\"text\"\n              multiline\n              rows={2}\n              fullWidth\n            />\n          </Grid>\n        </Grid>\n      </Modal>\n      <Grid container spacing={1}>\n        <Grid item sm={12} className={classes.grid}>\n          <Button\n            variant=\"contained\"\n            onClick={handleModal}\n            color=\"primary\"\n            startIcon={<AddIcon />}\n          >\n            Entity\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import { getRandomId } from \"../utils\";\nimport Service from \"./index\";\n\nexport default class TransactionService extends Service {\n  _persistKey = \"_a_t_transactions\";\n\n  constructor(userId) {\n    super(userId);\n    this._persistKey = this.userId + this._persistKey;\n    this.data = this.retrieve();\n  }\n\n  create = (transaction) => {\n    if (transaction instanceof Transaction) {\n      if (this.isExists(transaction.id)) {\n        this.data = [...this.data, transaction];\n      }\n    }\n  };\n}\n\nexport class Transaction {\n  id;\n  entityId;\n  time;\n  cost;\n  paid;\n  payment_mode;\n  remarks;\n  constructor(entityId, cost, paid, payment_mode, remarks, time = Date.now()) {\n    this.id = getRandomId();\n    this.time = +new Date(time);\n    this.entityId = entityId;\n    this.cost = cost;\n    this.paid = paid;\n    this.payment_mode = payment_mode;\n    this.remarks = remarks ?? \"\";\n  }\n}\n","export const CRUD = {\n  CREATE: \"CREATE\",\n  READ: \"READ\",\n  UPDATE: \"UPDATE\",\n  DELETE: \"DELETE\",\n  BULK_CREATE: \"BULK_CREATE\",\n};\n\nexport const PAYMENT_MODES = {\n  CASH: \"CASH\",\n  UPI: \"UPI\",\n  WIRE: \"WIRE\",\n  WALLET: \"WALLET\",\n  CARD: \"CARD\",\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Transaction } from \"../../../services/transaction\";\nimport { Paper } from \"@material-ui/core\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { PAYMENT_MODES } from \"../../../constants\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    margin: `${theme.spacing(1)}px 0`,\n    padding: `${theme.spacing(1)}px`,\n  },\n  grid: {\n    textAlign: \"right\",\n  },\n  button: {\n    margin: `${theme.spacing(1)}px 0`,\n  },\n}));\n\nexport default function NewTransaction({ handleAdd }) {\n  const classes = useStyles();\n  const [time, setTime] = React.useState(Date.now());\n  const [cost, setCost] = React.useState(0);\n  const [paid, setPaid] = React.useState(0);\n  const [paymentMode, setPaymentMode] = React.useState(PAYMENT_MODES.CASH);\n  const [remarks, setRemarks] = React.useState(\"\");\n\n  const reset = () => {\n    setTime(Date.now());\n    setCost(0);\n    setPaid(0);\n    setPaymentMode(PAYMENT_MODES.CASH);\n    setRemarks(\"\");\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    handleAdd(\n      (entityId) =>\n        new Transaction(entityId, cost, paid, paymentMode, remarks, time)\n    );\n    handleOpen();\n    reset();\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <form noValidate autoComplete=\"off\">\n      {open && (\n        <Paper className={classes.paper}>\n          <Grid container spacing={1}>\n            <Grid item sm={6} xs={12}>\n              <TextField\n                id=\"cost\"\n                label=\"Cost\"\n                value={cost}\n                onChange={(e) => setCost(Number(e.target.value))}\n                type=\"number\"\n                fullWidth\n                size=\"small\"\n              />\n            </Grid>\n            <Grid item sm={6} xs={12}>\n              <TextField\n                id=\"paid\"\n                label=\"Paid\"\n                value={paid}\n                onChange={(e) => setPaid(Number(e.target.value))}\n                type=\"number\"\n                fullWidth\n                size=\"small\"\n              />\n            </Grid>\n            <Grid item sm={6} xs={12}>\n              <TextField\n                id=\"time\"\n                label=\"Time\"\n                value={time}\n                onChange={(e) => setTime(e.target.value)}\n                type=\"datetime-local\"\n                fullWidth\n                size=\"small\"\n              />\n            </Grid>\n            <Grid item sm={6} xs={12}>\n              <TextField\n                id=\"payment_mode\"\n                select\n                label=\"Payment Mode\"\n                value={paymentMode}\n                onChange={(e) => setPaymentMode(e.target.value)}\n                fullWidth\n              >\n                {Object.keys(PAYMENT_MODES).map((o) => (\n                  <MenuItem key={o} value={o}>\n                    {o}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                id=\"remarks\"\n                label=\"Remarks\"\n                value={remarks}\n                onChange={(e) => setRemarks(e.target.value)}\n                type=\"text\"\n                multiline\n                rows={2}\n                fullWidth\n                size=\"small\"\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.grid}>\n              <Button\n                variant=\"contained\"\n                onClick={handleSubmit}\n                color=\"primary\"\n                size=\"small\"\n              >\n                Submit\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      )}\n      {!open && (\n        <Button\n          onClick={handleOpen}\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          size=\"small\"\n          className={classes.button}\n        >\n          Transaction\n        </Button>\n      )}\n    </form>\n  );\n}\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport cx from \"classnames\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  debit: {\n    color: theme.palette.error.main,\n  },\n  credit: {\n    color: theme.palette.success.main,\n  },\n}));\n\nexport default function Amount({ amount, neutral = false }) {\n  const classes = useStyles();\n  return (\n    <Typography\n      className={cx(classes.root, {\n        [classes.debit]: !neutral && amount < 0,\n        [classes.credit]: !neutral && amount > 0,\n      })}\n      component=\"span\"\n    >\n      ₹ {Math.abs(amount)}\n    </Typography>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Grid } from \"@material-ui/core\";\nimport NewTransaction from \"./NewTransaction\";\nimport Amount from \"../../Amount\";\nimport { CRUD } from \"../../../constants\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  header: {\n    \"&>.MuiGrid-item:not(:first-child)\": {\n      textAlign: \"right\",\n    },\n  },\n}));\n\nfunction Transaction({ id, time, cost, paid, payment_mode, remarks }) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = (event, isExpanded) => {\n    setExpanded(isExpanded);\n  };\n\n  return (\n    <Accordion\n      expanded={expanded}\n      onChange={handleChange}\n      TransitionProps={{ unmountOnExit: true }}\n    >\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"content\"\n        id={id}\n      >\n        <Grid container spacing={1} className={classes.header}>\n          <Grid item sm={3} xs={6}>\n            <Typography>{new Date(time).toLocaleString()}</Typography>\n          </Grid>\n          <Grid item sm={3} xs={6}>\n            <Amount amount={cost} neutral />\n          </Grid>\n          <Grid item sm={3} xs={6}>\n            <Amount amount={-paid} />\n            <Typography component=\"span\" variant=\"caption\">\n              ({payment_mode})\n            </Typography>\n          </Grid>\n          <Grid item sm={3} xs={6}>\n            <Amount amount={cost - paid} />\n          </Grid>\n        </Grid>\n      </AccordionSummary>\n      <AccordionDetails>\n        <Typography className={classes.secondaryHeading}>{remarks}</Typography>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n\nexport default function Transactions({ entityId, data, dispatch }) {\n  const classes = useStyles();\n\n  const handleAdd = (cb) => {\n    const transaction = cb(entityId);\n    dispatch({ type: CRUD.CREATE, payload: transaction });\n  };\n\n  return (\n    <Grid container>\n      <Grid item sm={12}>\n        {data.map((d) => (\n          <Transaction key={d.id} {...d} />\n        ))}\n      </Grid>\n      <Grid item sm={12}>\n        <NewTransaction handleAdd={handleAdd} />\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Divider, Grid } from \"@material-ui/core\";\nimport NewEntity from \"./NewEntity\";\nimport Transactions from \"./Transactions\";\nimport Amount from \"../Amount\";\nimport { CRUD } from \"../../constants\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    margin: `${theme.spacing(1)}px 0`,\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"66.66%\",\n    flexShrink: 0,\n    textAlign: \"right\",\n    marginRight: theme.spacing(2),\n  },\n  paper: {\n    padding: theme.spacing(1),\n  },\n  divider: {\n    margin: `${theme.spacing(1)}px 0`,\n  },\n  rightAlign: {\n    textAlign: \"right\",\n  },\n}));\n\nfunction Entity({\n  id,\n  name,\n  description,\n  balance,\n  opening_balance,\n  transactions,\n  transactionProps,\n}) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = (event, isExpanded) => {\n    setExpanded(isExpanded);\n  };\n\n  return (\n    <Accordion\n      expanded={expanded}\n      onChange={handleChange}\n      TransitionProps={{ unmountOnExit: true }}\n    >\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"content\"\n        id={id}\n      >\n        <Typography className={classes.heading}>{name}</Typography>\n        <div className={classes.secondaryHeading}>\n          <Amount amount={balance} />\n        </div>\n      </AccordionSummary>\n      <Divider />\n      <AccordionDetails>\n        <Grid container spacing={2}>\n          <Grid item sm={3}>\n            <Typography variant=\"caption\">Opening balance</Typography>\n            <Typography variant=\"body2\">\n              <Amount amount={opening_balance} />\n            </Typography>\n            <Divider className={classes.divider} />\n            <Typography variant=\"caption\">Description</Typography>\n            <Typography variant=\"body2\">{description}</Typography>\n          </Grid>\n          <Grid item xs={12} sm={9}>\n            <Transactions\n              entityId={id}\n              data={transactions}\n              {...transactionProps}\n            />\n          </Grid>\n        </Grid>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n\nexport default function Entities({ data, dispatch, transactionProps }) {\n  const classes = useStyles();\n\n  const handleAdd = (entity) => {\n    dispatch({ type: CRUD.CREATE, payload: entity });\n  };\n\n  return (\n    <Grid container className={classes.root} spacing={2}>\n      <Grid item sm={9} className={classes.rightAlign}>\n        <Typography component=\"div\" variant=\"subtitle1\">\n          Total: <Amount amount={data.balance} />\n        </Typography>\n      </Grid>\n      <Grid item sm={3}>\n        <NewEntity handleAdd={handleAdd} />\n      </Grid>\n      <Grid item sm={12}>\n        {data.entities?.map((d) => {\n          return (\n            <Entity key={d.id} {...d} transactionProps={transactionProps} />\n          );\n        })}\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccountCircle from \"@material-ui/icons/ExitToApp\";\nimport { Container } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Layout({ userId, children }) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Tula\n          </Typography>\n          <div>\n            {userId ? (\n              <Typography variant=\"h6\" className={classes.title}>\n                {userId}\n              </Typography>\n            ) : (\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n            )}\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Container>{userId && children}</Container>\n    </div>\n  );\n}\n","export default function auth(state, action) {\n  const { type, userId } = action;\n  switch (type) {\n    case \"LOGIN\":\n      return { userId };\n    case \"LOGOUT\":\n      return {};\n    default:\n      throw new Error();\n  }\n}\n","import { CRUD } from \"../constants\";\nexport default function crud(state, action) {\n  const { type } = action;\n  let returnState = state;\n  switch (type) {\n    case CRUD.BULK_CREATE:\n      returnState = [...state, ...action.payload];\n      break;\n    case CRUD.CREATE:\n      returnState = [...state, action.payload];\n      break;\n    case CRUD.UPDATE:\n      const index = state.findIndex((o) => o.id === action.id);\n      if (index > 0) {\n        const obj = { ...state[index], ...action.payload };\n        returnState = [\n          ...state.slice(0, index),\n          obj,\n          ...state.slice(index + 1),\n        ];\n      }\n      break;\n    case CRUD.DELETE:\n      returnState = state.filter((o) => action.queryFn(o));\n      break;\n    default:\n      throw new Error();\n  }\n  return returnState;\n}\n","import React, { useEffect } from \"react\";\nimport Auth from \"./components/Auth\";\nimport Entities from \"./components/Entities\";\nimport Layout from \"./components/Layout\";\nimport useStore from \"./hooks/useStore\";\nimport auth from \"./reducers/auth\";\n\nimport crud from \"./reducers/crud\";\nimport { prepareData } from \"./utils\";\n\nfunction App() {\n  const [{ userId }, handleSubmit] = React.useReducer(auth, {});\n  const [entities, entityDispatcher] = React.useReducer(crud, []);\n  const [transactions, transactionDispatcher] = React.useReducer(crud, []);\n  const [data, setData] = React.useState({});\n\n  useEffect(() => {\n    if (userId) {\n      setData(prepareData(entities, transactions));\n    }\n  }, [userId, entities, transactions]);\n\n  useStore(\n    userId,\n    entities,\n    transactions,\n    entityDispatcher,\n    transactionDispatcher\n  );\n\n  return (\n    <div className=\"App\">\n      <Auth loggedIn={!!userId} handleSubmit={handleSubmit} />\n      <Layout userId={userId}>\n        <Entities\n          data={data}\n          dispatch={entityDispatcher}\n          transactionProps={{ dispatch: transactionDispatcher }}\n        />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { CRUD } from \"../constants\";\nimport EntityService from \"../services/entity\";\nimport TransactionService from \"../services/transaction\";\n\nexport default function useStore(\n  userId,\n  entities,\n  transactions,\n  entityDispatcher,\n  transactionDispatcher\n) {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    const { entity, transaction } = ref.current;\n    if (userId && !entity && !transaction) {\n      ref.current.entity = new EntityService(userId);\n      ref.current.transaction = new TransactionService(userId);\n      entityDispatcher({\n        type: CRUD.BULK_CREATE,\n        payload: ref.current.entity.data,\n      });\n      transactionDispatcher({\n        type: CRUD.BULK_CREATE,\n        payload: ref.current.transaction.data,\n      });\n    }\n    if (ref.current.entity && ref.current.transaction) {\n      if (entities.length) {\n        entity.data = entities;\n        entity.persist();\n      }\n      if (transactions.length) {\n        transaction.data = transactions;\n        transaction.persist();\n      }\n    }\n  }, [userId, entities, transactions, entityDispatcher, transactionDispatcher]);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}