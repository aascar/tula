{"version":3,"sources":["components/Modal.js","components/Auth.js","utils/index.js","services/entity.js","components/Entities/NewEntity.js","services/transaction.js","components/Entities/Transactions/NewTransaction.js","components/Entities/Transactions/index.js","components/Entities/index.js","components/Layout.js","reducers/auth.js","reducers/entity.js","reducers/transaction.js","App.js","reportWebVitals.js","index.js"],"names":["DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","props","children","classes","onClose","other","disableTypography","className","Typography","variant","IconButton","aria-label","onClick","DialogContent","minWidth","MuiDialogContent","DialogActions","MuiDialogActions","Modal","open","title","actions","handleClose","noValidate","autoComplete","Dialog","aria-labelledby","id","Auth","loggedIn","handleSubmit","React","useState","userId","setUserId","Button","type","e","preventDefault","TextField","label","value","fullWidth","autoFocus","onChange","event","target","getRandomId","size","Math","random","toString","slice","Entity","name","description","opening_balance","this","balance","useStyles","makeStyles","grid","textAlign","NewEntity","handleAdd","setName","setBalance","setDescription","Grid","container","item","sm","multiline","rows","startIcon","Transaction","entityId","credit","debit","remarks","time","Date","now","NewTransaction","setCredit","setDebit","setRemarks","Number","width","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","text","secondary","expanded","setExpanded","Accordion","isExpanded","AccordionSummary","expandIcon","aria-controls","AccordionDetails","Transactions","data","dispatch","map","d","cb","transaction","paper","transactions","transactionDispatcher","Entities","entityDispatcher","Paper","entity","flexGrow","menuButton","marginRight","Layout","AppBar","Toolbar","aria-haspopup","Container","auth","state","action","Error","App","useReducer","entities","setData","useEffect","Array","isArray","en","filter","o","prepareData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.360a6d35.chunk.js","sourcesContent":["import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    minWidth: 320,\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Modal({ children, open, title, actions, handleClose }) {\n  return (\n    <form noValidate autoComplete=\"off\">\n      <Dialog\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n        onClose={handleClose ?? (() => null)}\n      >\n        {title && (\n          <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n            {title}\n          </DialogTitle>\n        )}\n        <DialogContent>{children}</DialogContent>\n        <DialogActions>\n          {/* <Button onClick={handleSubmit} color=\"primary\">\n            Login\n          </Button> */}\n          {actions}\n        </DialogActions>\n      </Dialog>\n    </form>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Modal from \"./Modal\";\n\nexport default function Auth({ loggedIn = false, handleSubmit }) {\n  const [userId, setUserId] = React.useState(\"\");\n  const handleChange = (event) => {\n    setUserId(event.target.value);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    handleSubmit({ type: \"LOGIN\", userId });\n  };\n\n  const actions = (\n    <Button type=\"submit\" onClick={onSubmit} color=\"primary\">\n      Login\n    </Button>\n  );\n\n  return (\n    <Modal title=\"Login\" actions={actions} open={!loggedIn}>\n      <TextField\n        id=\"userId\"\n        label=\"User Id\"\n        value={userId}\n        fullWidth\n        autoFocus\n        onChange={handleChange}\n      />\n    </Modal>\n  );\n}\n","export const getRandomId = (size = 7) =>\n  Math.random().toString(36).slice(-size);\n\nexport const prepareData = (entities, transactions) => {\n  if (Array.isArray(entities) && Array.isArray(transactions)) {\n    return entities.map((en) => ({\n      ...en,\n      transactions: transactions.filter((o) => (o.entityId = en.id)),\n    }));\n  } else {\n    return [];\n  }\n};\n","import { getRandomId } from \"../utils\";\nimport Service from \"./index\";\n\nexport default class EntityService extends Service {\n  _persistKey = \"_a_t_entities\";\n\n  create = (entity) => {\n    if (entity instanceof Entity) {\n      if (this.isExists(entity.id)) {\n        this.data = [...this.data, entity];\n      }\n    }\n  };\n}\n\nexport class Entity {\n  id;\n  name;\n  description;\n  balance;\n  opening_balance;\n  constructor(name, description, opening_balance) {\n    this.id = getRandomId();\n    this.name = name;\n    this.description = description;\n    this.opening_balance = opening_balance;\n    this.balance = opening_balance;\n  }\n}\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Entity } from \"../../services/entity\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  grid: {\n    textAlign: \"right\",\n  },\n}));\n\nexport default function NewEntity({ handleAdd }) {\n  const classes = useStyles();\n  const [name, setName] = React.useState(\"\");\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const [opening_balance, setBalance] = React.useState(0);\n  const handleBalanceChange = (event) => {\n    setBalance(event.target.value);\n  };\n\n  const [description, setDescription] = React.useState(\"\");\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    handleAdd(new Entity(name, opening_balance));\n  };\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <Grid container spacing={1}>\n        <Grid item sm={6}>\n          <TextField\n            id=\"name\"\n            label=\"Name\"\n            value={name}\n            onChange={handleNameChange}\n            fullWidth\n          />\n        </Grid>\n        <Grid item sm={6}>\n          <TextField\n            id=\"balance\"\n            label=\"Opening Balance\"\n            value={opening_balance}\n            onChange={handleBalanceChange}\n            type=\"number\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item sm={12}>\n          <TextField\n            id=\"description\"\n            label=\"Description\"\n            value={description}\n            onChange={handleDescriptionChange}\n            type=\"text\"\n            multiline\n            rows={2}\n            fullWidth\n          />\n        </Grid>\n        <Grid item sm={12}></Grid>\n        <Grid item sm={12} className={classes.grid}>\n          <Button\n            onClick={handleSubmit}\n            color=\"primary\"\n            startIcon={<AddIcon />}\n          >\n            Entity\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n","import { getRandomId } from \"../utils\";\nimport Service from \"./index\";\n\nexport default class TransactionService extends Service {\n  _persistKey = \"_a_t_transactions\";\n\n  create = (transaction) => {\n    if (transaction instanceof Transaction) {\n      if (this.isExists(transaction.id)) {\n        this.data = [...this.data, transaction];\n      }\n    }\n  };\n}\n\nexport class Transaction {\n  id;\n  entityId;\n  time;\n  credit;\n  debit;\n  remarks;\n  constructor(entityId, credit, debit, remarks) {\n    this.id = getRandomId();\n    this.time = Date.now();\n    this.entityId = entityId;\n    this.credit = credit;\n    this.debit = debit;\n    this.remarks = remarks;\n  }\n}\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Transaction } from \"../../../services/transaction\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  grid: {\n    textAlign: \"right\",\n  },\n}));\n\nexport default function NewTransaction({ handleAdd }) {\n  const classes = useStyles();\n  const [credit, setCredit] = React.useState(0);\n  const [debit, setDebit] = React.useState(0);\n  const [remarks, setRemarks] = React.useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    handleAdd((entityId) => new Transaction(entityId, credit, debit, remarks));\n  };\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <Grid container spacing={1}>\n        <Grid item sm={6}>\n          <TextField\n            id=\"credit\"\n            label=\"Credit\"\n            value={credit}\n            onChange={(e) => setCredit(Number(e.target.value))}\n            type=\"number\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item sm={6}>\n          <TextField\n            id=\"debit\"\n            label=\"Debit\"\n            value={debit}\n            onChange={(e) => setDebit(Number(e.target.value))}\n            type=\"number\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item sm={12}>\n          <TextField\n            id=\"remarks\"\n            label=\"Remarks\"\n            value={remarks}\n            onChange={(e) => setRemarks(e.target.value)}\n            type=\"text\"\n            multiline\n            rows={2}\n            fullWidth\n          />\n        </Grid>\n        <Grid item sm={12}></Grid>\n        <Grid item sm={12} className={classes.grid}>\n          <Button\n            onClick={handleSubmit}\n            color=\"primary\"\n            startIcon={<AddIcon />}\n          >\n            Transaction\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Grid } from \"@material-ui/core\";\nimport NewTransaction from \"./NewTransaction\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction Transaction({ id, time, credit, debit, remarks }) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = (event, isExpanded) => {\n    setExpanded(isExpanded);\n  };\n\n  return (\n    <Accordion expanded={expanded} onChange={handleChange}>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"content\"\n        id={id}\n      >\n        <Typography className={classes.heading}>{credit}</Typography>\n        <Typography className={classes.heading}>{debit}</Typography>\n        <Typography className={classes.secondaryHeading}>{remarks}</Typography>\n      </AccordionSummary>\n      <AccordionDetails></AccordionDetails>\n    </Accordion>\n  );\n}\n\nexport default function Transactions({ entityId, data, dispatch }) {\n  const classes = useStyles();\n\n  const handleAdd = (cb) => {\n    const transaction = cb(entityId);\n    dispatch({ type: \"ADD\", transaction });\n  };\n\n  return (\n    <Grid container>\n      <Grid item sm={12}>\n        {data.map((d) => (\n          <Transaction key={d.id} {...d} />\n        ))}\n      </Grid>\n      <Grid item sm={12}>\n        <NewTransaction handleAdd={handleAdd} />\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport NewEntity from \"./NewEntity\";\nimport Transactions from \"./Transactions\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  paper: {\n    padding: theme.spacing(1),\n  },\n}));\n\nfunction Entity({\n  id,\n  name,\n  description,\n  balance,\n  opening_balance,\n  transactions,\n  transactionDispatcher,\n}) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = (event, isExpanded) => {\n    setExpanded(isExpanded);\n  };\n\n  return (\n    <Accordion expanded={expanded} onChange={handleChange}>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"content\"\n        id={id}\n      >\n        <Typography className={classes.heading}>{name}</Typography>\n        <Typography className={classes.secondaryHeading}>\n          {description}\n        </Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <Transactions\n          entityId={id}\n          data={transactions}\n          dispatch={transactionDispatcher}\n        />\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n\nexport default function Entities({\n  data,\n  entityDispatcher,\n  transactionDispatcher,\n}) {\n  const classes = useStyles();\n\n  const handleAdd = (entity) => {\n    entityDispatcher({ type: \"ADD\", entity });\n  };\n\n  return (\n    <Grid container>\n      <Grid item sm={12}>\n        <Paper className={classes.paper}>\n          <NewEntity handleAdd={handleAdd} />\n        </Paper>\n      </Grid>\n      <Grid item sm={12}>\n        {data.map((d) => {\n          return (\n            <Entity\n              key={d.id}\n              {...d}\n              transactionDispatcher={transactionDispatcher}\n            />\n          );\n        })}\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccountCircle from \"@material-ui/icons/ExitToApp\";\nimport { Container } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Layout({ userId, children }) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Tula\n          </Typography>\n          <div>\n            {userId ? (\n              <Typography variant=\"h6\" className={classes.title}>\n                {userId}\n              </Typography>\n            ) : (\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n            )}\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Container>{userId && children}</Container>\n    </div>\n  );\n}\n","export default function auth(state, action) {\n  const { type, userId } = action;\n  switch (type) {\n    case \"LOGIN\":\n      return { userId };\n    case \"LOGOUT\":\n      return {};\n    default:\n      throw new Error();\n  }\n}\n","export default function entity(state, action) {\n  const { type } = action;\n  switch (type) {\n    case \"ADD\":\n      return [...state, action.entity];\n    case \"REMOVE\":\n      return [...state];\n    default:\n      throw new Error();\n  }\n}\n","export default function transaction(state, action) {\n  const { type, transaction } = action;\n  switch (type) {\n    case \"ADD\":\n      return [...state, transaction];\n    default:\n      throw new Error();\n  }\n}\n","import React, { useEffect } from \"react\";\nimport Auth from \"./components/Auth\";\nimport Entities from \"./components/Entities\";\nimport Layout from \"./components/Layout\";\nimport auth from \"./reducers/auth\";\n\nimport entity from \"./reducers/entity\";\nimport transaction from \"./reducers/transaction\";\nimport { prepareData } from \"./utils\";\n\nfunction App() {\n  const [{ userId }, handleSubmit] = React.useReducer(auth, {});\n  const [entities, entityDispatcher] = React.useReducer(entity, []);\n  const [transactions, transactionDispatcher] = React.useReducer(\n    transaction,\n    []\n  );\n  const [data, setData] = React.useState({});\n\n  useEffect(() => {\n    setData(prepareData(entities, transactions));\n  }, [userId, entities, transactions]);\n\n  return (\n    <div className=\"App\">\n      <Auth loggedIn={!!userId} handleSubmit={handleSubmit} />\n      <Layout userId={userId}>\n        <Entities\n          data={data}\n          entityDispatcher={entityDispatcher}\n          transactionDispatcher={transactionDispatcher}\n        />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}