{"version":3,"sources":["components/Modal.js","components/Auth.js","utils/index.js","services/entity.js","components/Entities/NewEntity.js","services/transaction.js","components/Entities/Transactions/NewTransaction.js","components/Amount.js","constants/index.js","components/Entities/Transactions/index.js","components/Entities/index.js","components/Layout.js","reducers/auth.js","reducers/crud.js","App.js","reportWebVitals.js","index.js"],"names":["DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","props","children","classes","onClose","other","disableTypography","className","Typography","variant","IconButton","aria-label","onClick","DialogContent","minWidth","MuiDialogContent","DialogActions","MuiDialogActions","Modal","open","title","actions","handleClose","noValidate","autoComplete","Dialog","aria-labelledby","id","Auth","loggedIn","handleSubmit","React","useState","userId","setUserId","Button","type","e","preventDefault","TextField","label","value","fullWidth","autoFocus","onChange","event","target","getRandomId","size","Math","random","toString","slice","Entity","name","description","opening_balance","this","balance","useStyles","makeStyles","grid","textAlign","NewEntity","handleAdd","setName","setBalance","setDescription","setOpen","handleModal","Grid","container","item","sm","Number","multiline","rows","startIcon","Transaction","entityId","credit","debit","remarks","time","Date","now","paper","button","NewTransaction","setTime","setCredit","setDebit","setRemarks","handleOpen","Paper","xs","fontSize","typography","pxToRem","error","main","success","Amount","amount","cx","component","abs","CRUD","width","heading","flexBasis","flexShrink","secondaryHeading","text","secondary","expanded","setExpanded","Accordion","isExpanded","TransitionProps","unmountOnExit","AccordionSummary","expandIcon","aria-controls","toLocaleString","AccordionDetails","Transactions","data","dispatch","map","d","cb","transaction","payload","marginRight","divider","rightAlign","transactions","transactionProps","Divider","Entities","entity","entities","flexGrow","menuButton","Layout","AppBar","Toolbar","aria-haspopup","Container","auth","state","action","Error","crud","returnState","index","findIndex","o","obj","filter","queryFn","App","useReducer","entityDispatcher","transactionDispatcher","setData","useEffect","console","log","Array","isArray","en","prepareData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1df83d04.chunk.js","sourcesContent":["import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    minWidth: 320,\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Modal({ children, open, title, actions, handleClose }) {\n  return (\n    <form noValidate autoComplete=\"off\">\n      <Dialog\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n        onClose={handleClose ?? (() => null)}\n      >\n        {title && (\n          <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n            {title}\n          </DialogTitle>\n        )}\n        <DialogContent>{children}</DialogContent>\n        <DialogActions>\n          {/* <Button onClick={handleSubmit} color=\"primary\">\n            Login\n          </Button> */}\n          {actions}\n        </DialogActions>\n      </Dialog>\n    </form>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Modal from \"./Modal\";\n\nexport default function Auth({ loggedIn = false, handleSubmit }) {\n  const [userId, setUserId] = React.useState(\"\");\n  const handleChange = (event) => {\n    setUserId(event.target.value);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    handleSubmit({ type: \"LOGIN\", userId });\n  };\n\n  const actions = (\n    <Button type=\"submit\" onClick={onSubmit} color=\"primary\">\n      Login\n    </Button>\n  );\n\n  return (\n    <Modal title=\"Login\" actions={actions} open={!loggedIn}>\n      <TextField\n        id=\"userId\"\n        label=\"User Id\"\n        value={userId}\n        fullWidth\n        autoFocus\n        onChange={handleChange}\n      />\n    </Modal>\n  );\n}\n","export const getRandomId = (size = 7) =>\n  Math.random().toString(36).slice(-size);\n\nexport const prepareData = (entities, transactions) => {\n  const data = {\n    balance: 0,\n    entities: [],\n  };\n  console.log(entities, transactions);\n  if (Array.isArray(entities) && Array.isArray(transactions)) {\n    data.entities = entities.map((en) => {\n      data.balance += en.balance;\n      return {\n        ...en,\n        transactions: transactions.filter((o) => o.entityId === en.id),\n      };\n    });\n  }\n  return data;\n};\n","import { getRandomId } from \"../utils\";\nimport Service from \"./index\";\n\nexport default class EntityService extends Service {\n  _persistKey = \"_a_t_entities\";\n\n  create = (entity) => {\n    if (entity instanceof Entity) {\n      if (this.isExists(entity.id)) {\n        this.data = [...this.data, entity];\n      }\n    }\n  };\n}\n\nexport class Entity {\n  id;\n  name;\n  description;\n  balance;\n  opening_balance;\n  constructor(name, description, opening_balance) {\n    this.id = getRandomId();\n    this.name = name;\n    this.description = description;\n    this.opening_balance = opening_balance;\n    this.balance = opening_balance;\n  }\n}\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Entity } from \"../../services/entity\";\nimport Modal from \"../Modal\";\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    textAlign: \"right\",\n  },\n}));\n\nexport default function NewEntity({ handleAdd }) {\n  const classes = useStyles();\n  const [name, setName] = React.useState(\"\");\n  const [opening_balance, setBalance] = React.useState(0);\n  const [description, setDescription] = React.useState(\"\");\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    handleAdd(new Entity(name, description, opening_balance));\n    handleModal();\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const handleModal = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <div>\n      <Modal\n        open={open}\n        actions={\n          <Button onClick={handleSubmit} color=\"primary\">\n            Submit\n          </Button>\n        }\n        title=\"New Entity\"\n        handleClose={handleModal}\n      >\n        <Grid container spacing={1}>\n          <Grid item sm={6}>\n            <TextField\n              id=\"name\"\n              label=\"Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              fullWidth\n            />\n          </Grid>\n          <Grid item sm={6}>\n            <TextField\n              id=\"balance\"\n              label=\"Opening Balance\"\n              value={opening_balance}\n              onChange={(e) => setBalance(Number(e.target.value))}\n              type=\"number\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item sm={12}>\n            <TextField\n              id=\"description\"\n              label=\"Description\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              type=\"text\"\n              multiline\n              rows={2}\n              fullWidth\n            />\n          </Grid>\n        </Grid>\n      </Modal>\n      <Grid container spacing={1}>\n        <Grid item sm={12} className={classes.grid}>\n          <Button\n            variant=\"contained\"\n            onClick={handleModal}\n            color=\"primary\"\n            startIcon={<AddIcon />}\n          >\n            Entity\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import { getRandomId } from \"../utils\";\nimport Service from \"./index\";\n\nexport default class TransactionService extends Service {\n  _persistKey = \"_a_t_transactions\";\n\n  create = (transaction) => {\n    if (transaction instanceof Transaction) {\n      if (this.isExists(transaction.id)) {\n        this.data = [...this.data, transaction];\n      }\n    }\n  };\n}\n\nexport class Transaction {\n  id;\n  entityId;\n  time;\n  credit;\n  debit;\n  remarks;\n  constructor(entityId, credit, debit, remarks, time = Date.now()) {\n    debugger;\n    this.id = getRandomId();\n    this.time = +new Date(time);\n    this.entityId = entityId;\n    this.credit = credit;\n    this.debit = debit;\n    this.remarks = remarks ?? \"\";\n  }\n}\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Transaction } from \"../../../services/transaction\";\nimport { Paper } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    margin: `${theme.spacing(1)}px 0`,\n    padding: `${theme.spacing(1)}px`,\n  },\n  grid: {\n    textAlign: \"right\",\n  },\n  button: {\n    margin: `${theme.spacing(1)}px 0`,\n  },\n}));\n\nexport default function NewTransaction({ handleAdd }) {\n  const classes = useStyles();\n  const [time, setTime] = React.useState(Date.now());\n  const [credit, setCredit] = React.useState(0);\n  const [debit, setDebit] = React.useState(0);\n  const [remarks, setRemarks] = React.useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    handleAdd(\n      (entityId) => new Transaction(entityId, credit, debit, remarks, time)\n    );\n    handleOpen();\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <form noValidate autoComplete=\"off\">\n      {open && (\n        <Paper className={classes.paper}>\n          <Grid container spacing={1}>\n            <Grid item sm={4} xs={12}>\n              <TextField\n                id=\"debit\"\n                label=\"Time\"\n                value={time}\n                onChange={(e) => setTime(e.target.value)}\n                type=\"datetime-local\"\n                fullWidth\n                size=\"small\"\n              />\n            </Grid>\n            <Grid item sm={4} xs={12}>\n              <TextField\n                id=\"credit\"\n                label=\"Credit (+)\"\n                value={credit}\n                onChange={(e) => setCredit(Number(e.target.value))}\n                type=\"number\"\n                fullWidth\n                size=\"small\"\n              />\n            </Grid>\n            <Grid item sm={4} xs={12}>\n              <TextField\n                id=\"debit\"\n                label=\"Debit (-)\"\n                value={debit}\n                onChange={(e) => setDebit(Number(e.target.value))}\n                type=\"number\"\n                fullWidth\n                size=\"small\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                id=\"remarks\"\n                label=\"Remarks\"\n                value={remarks}\n                onChange={(e) => setRemarks(e.target.value)}\n                type=\"text\"\n                multiline\n                rows={2}\n                fullWidth\n                size=\"small\"\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.grid}>\n              <Button\n                variant=\"contained\"\n                onClick={handleSubmit}\n                color=\"primary\"\n                size=\"small\"\n              >\n                Submit\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      )}\n      {!open && (\n        <Button\n          onClick={handleOpen}\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          size=\"small\"\n          className={classes.button}\n        >\n          Transaction\n        </Button>\n      )}\n    </form>\n  );\n}\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport cx from \"classnames\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  debit: {\n    color: theme.palette.error.main,\n  },\n  credit: {\n    color: theme.palette.success.main,\n  },\n}));\n\nexport default function Amount({ amount }) {\n  const classes = useStyles();\n  return (\n    <Typography\n      className={cx(classes.root, {\n        [classes.debit]: amount < 0,\n        [classes.credit]: amount > 0,\n      })}\n      component=\"span\"\n    >\n      ₹ {Math.abs(amount)}\n    </Typography>\n  );\n}\n","export const CRUD = {\n  CREATE: \"CREATE\",\n  READ: \"READ\",\n  UPDATE: \"UPDATE\",\n  DELETE: \"DELETE\",\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Grid } from \"@material-ui/core\";\nimport NewTransaction from \"./NewTransaction\";\nimport Amount from \"../../Amount\";\nimport { CRUD } from \"../../../constants\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  heading: {\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n    textAlign: \"right\",\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction Transaction({ id, time, credit, debit, remarks }) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = (event, isExpanded) => {\n    setExpanded(isExpanded);\n  };\n\n  return (\n    <Accordion\n      expanded={expanded}\n      onChange={handleChange}\n      TransitionProps={{ unmountOnExit: true }}\n    >\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"content\"\n        id={id}\n      >\n        <Typography>{new Date(time).toLocaleString()}</Typography>\n        <div className={classes.heading}>\n          <Amount amount={credit} />\n        </div>\n        <div className={classes.heading}>\n          <Amount amount={-debit} />\n        </div>\n      </AccordionSummary>\n      <AccordionDetails>\n        <Typography className={classes.secondaryHeading}>{remarks}</Typography>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n\nexport default function Transactions({ entityId, data, dispatch }) {\n  const classes = useStyles();\n\n  const handleAdd = (cb) => {\n    const transaction = cb(entityId);\n    dispatch({ type: CRUD.CREATE, payload: transaction });\n  };\n\n  return (\n    <Grid container>\n      <Grid item sm={12}>\n        {data.map((d) => (\n          <Transaction key={d.id} {...d} />\n        ))}\n      </Grid>\n      <Grid item sm={12}>\n        <NewTransaction handleAdd={handleAdd} />\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Divider, Grid } from \"@material-ui/core\";\nimport NewEntity from \"./NewEntity\";\nimport Transactions from \"./Transactions\";\nimport Amount from \"../Amount\";\nimport { CRUD } from \"../../constants\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    margin: `${theme.spacing(1)}px 0`,\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"66.66%\",\n    flexShrink: 0,\n    textAlign: \"right\",\n    marginRight: theme.spacing(2),\n  },\n  paper: {\n    padding: theme.spacing(1),\n  },\n  divider: {\n    margin: `${theme.spacing(1)}px 0`,\n  },\n  rightAlign: {\n    textAlign: \"right\",\n  },\n}));\n\nfunction Entity({\n  id,\n  name,\n  description,\n  balance,\n  opening_balance,\n  transactions,\n  transactionProps,\n}) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = (event, isExpanded) => {\n    setExpanded(isExpanded);\n  };\n\n  return (\n    <Accordion\n      expanded={expanded}\n      onChange={handleChange}\n      TransitionProps={{ unmountOnExit: true }}\n    >\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"content\"\n        id={id}\n      >\n        <Typography className={classes.heading}>{name}</Typography>\n        <div className={classes.secondaryHeading}>\n          <Amount amount={balance} />\n        </div>\n      </AccordionSummary>\n      <Divider />\n      <AccordionDetails>\n        <Grid container spacing={2}>\n          <Grid item sm={3}>\n            <Typography variant=\"caption\">Opening balance</Typography>\n            <Typography variant=\"body2\">\n              <Amount amount={opening_balance} />\n            </Typography>\n            <Divider className={classes.divider} />\n            <Typography variant=\"caption\">Description</Typography>\n            <Typography variant=\"body2\">{description}</Typography>\n          </Grid>\n          <Grid item xs={12} sm={9}>\n            <Transactions\n              entityId={id}\n              data={transactions}\n              {...transactionProps}\n            />\n          </Grid>\n        </Grid>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n\nexport default function Entities({ data, dispatch, transactionProps }) {\n  const classes = useStyles();\n\n  const handleAdd = (entity) => {\n    dispatch({ type: CRUD.CREATE, payload: entity });\n  };\n\n  return (\n    <Grid container className={classes.root} spacing={2}>\n      <Grid item sm={9} className={classes.rightAlign}>\n        <Typography component=\"div\" variant=\"subtitle1\">\n          Total: <Amount amount={data.balance} />\n        </Typography>\n      </Grid>\n      <Grid item sm={3}>\n        <NewEntity handleAdd={handleAdd} />\n      </Grid>\n      <Grid item sm={12}>\n        {data.entities.map((d) => {\n          return (\n            <Entity key={d.id} {...d} transactionProps={transactionProps} />\n          );\n        })}\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccountCircle from \"@material-ui/icons/ExitToApp\";\nimport { Container } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Layout({ userId, children }) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Tula\n          </Typography>\n          <div>\n            {userId ? (\n              <Typography variant=\"h6\" className={classes.title}>\n                {userId}\n              </Typography>\n            ) : (\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n            )}\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Container>{userId && children}</Container>\n    </div>\n  );\n}\n","export default function auth(state, action) {\n  const { type, userId } = action;\n  switch (type) {\n    case \"LOGIN\":\n      return { userId };\n    case \"LOGOUT\":\n      return {};\n    default:\n      throw new Error();\n  }\n}\n","import { CRUD } from \"../constants\";\nexport default function crud(state, action) {\n  const { type } = action;\n  let returnState = state;\n  switch (type) {\n    case CRUD.CREATE:\n      returnState = [...state, action.payload];\n      break;\n    case CRUD.UPDATE:\n      const index = state.findIndex((o) => o.id === action.id);\n      if (index > 0) {\n        const obj = { ...state[index], ...action.payload };\n        returnState = [\n          ...state.slice(0, index),\n          obj,\n          ...state.slice(index + 1),\n        ];\n      }\n      break;\n    case CRUD.DELETE:\n      returnState = state.filter((o) => action.queryFn(o));\n      break;\n    default:\n      throw new Error();\n  }\n  return returnState;\n}\n","import React, { useEffect } from \"react\";\nimport Auth from \"./components/Auth\";\nimport Entities from \"./components/Entities\";\nimport Layout from \"./components/Layout\";\nimport auth from \"./reducers/auth\";\n\nimport crud from \"./reducers/crud\";\nimport { prepareData } from \"./utils\";\n\nfunction App() {\n  const [{ userId }, handleSubmit] = React.useReducer(auth, {});\n  const [entities, entityDispatcher] = React.useReducer(crud, []);\n  const [transactions, transactionDispatcher] = React.useReducer(crud, []);\n  const [data, setData] = React.useState({});\n\n  useEffect(() => {\n    setData(prepareData(entities, transactions));\n  }, [userId, entities, transactions]);\n\n  return (\n    <div className=\"App\">\n      <Auth loggedIn={!!userId} handleSubmit={handleSubmit} />\n      <Layout userId={userId}>\n        <Entities\n          data={data}\n          dispatch={entityDispatcher}\n          transactionProps={{ dispatch: transactionDispatcher }}\n        />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}